//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4 C:\\Users\\dany_\\Desktop\\SIC_gramatica.g 2020-10-03 17:38:20

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 168, 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;
using ConditionalAttribute = System.Diagnostics.ConditionalAttribute;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4")]
[System.CLSCompliant(false)]
public partial class SIC_gramaticaParser : Antlr.Runtime.Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "FINL", "FINLINEA", "NL", "NUM", "SIMBOLO", "'ADD'", "'AND'", "'BYTE'", "'C'", "'COMP'", "'DIV'", "'END'", "'J'", "'JEQ'", "'JGT'", "'JLT'", "'JSUB'", "'LDA'", "'LDCG'", "'LDL'", "'LDX'", "'MUL'", "'OR'", "'RD'", "'RESB'", "'RESW'", "'RSUB'", "'STA'", "'START'", "'STCH'", "'STL'", "'STSW'", "'STX'", "'SUB'", "'TD'", "'TIX'", "'WD'", "'WORD'", "'X'"
	};
	public const int EOF=-1;
	public const int T__9=9;
	public const int T__10=10;
	public const int T__11=11;
	public const int T__12=12;
	public const int T__13=13;
	public const int T__14=14;
	public const int T__15=15;
	public const int T__16=16;
	public const int T__17=17;
	public const int T__18=18;
	public const int T__19=19;
	public const int T__20=20;
	public const int T__21=21;
	public const int T__22=22;
	public const int T__23=23;
	public const int T__24=24;
	public const int T__25=25;
	public const int T__26=26;
	public const int T__27=27;
	public const int T__28=28;
	public const int T__29=29;
	public const int T__30=30;
	public const int T__31=31;
	public const int T__32=32;
	public const int T__33=33;
	public const int T__34=34;
	public const int T__35=35;
	public const int T__36=36;
	public const int T__37=37;
	public const int T__38=38;
	public const int T__39=39;
	public const int T__40=40;
	public const int T__41=41;
	public const int T__42=42;
	public const int FINL=4;
	public const int FINLINEA=5;
	public const int NL=6;
	public const int NUM=7;
	public const int SIMBOLO=8;

	#if ANTLR_DEBUG
		private static readonly bool[] decisionCanBacktrack =
			new bool[]
			{
				false, // invalid decision
				false, false, false, false, false, false, false
			};
	#else
		private static readonly bool[] decisionCanBacktrack = new bool[0];
	#endif
	public SIC_gramaticaParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public SIC_gramaticaParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		OnCreated();
	}

	public override string[] TokenNames { get { return SIC_gramaticaParser.tokenNames; } }
	public override string GrammarFileName { get { return "C:\\Users\\dany_\\Desktop\\SIC_gramatica.g"; } }


	[Conditional("ANTLR_TRACE")]
	protected virtual void OnCreated() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule(string ruleName, int ruleIndex) {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule(string ruleName, int ruleIndex) {}

	#region Rules

	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_programa() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_programa() {}

	// $ANTLR start "programa"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:7:1: programa : inicio proposicion fin FINLINEA ;
	[GrammarRule("programa")]
	private void programa()
	{
		EnterRule_programa();
		EnterRule("programa", 1);
		TraceIn("programa", 1);
		try { DebugEnterRule(GrammarFileName, "programa");
		DebugLocation(7, 41);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:7:9: ( inicio proposicion fin FINLINEA )
			DebugEnterAlt(1);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:7:11: inicio proposicion fin FINLINEA
			{
			DebugLocation(7, 11);
			PushFollow(Follow._inicio_in_programa38);
			inicio();
			PopFollow();

			DebugLocation(7, 18);
			PushFollow(Follow._proposicion_in_programa40);
			proposicion();
			PopFollow();

			DebugLocation(7, 30);
			PushFollow(Follow._fin_in_programa42);
			fin();
			PopFollow();

			DebugLocation(7, 34);
			Match(input,FINLINEA,Follow._FINLINEA_in_programa44); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("programa", 1);
			LeaveRule("programa", 1);
			LeaveRule_programa();
	    }
	 	DebugLocation(7, 41);
		} finally { DebugExitRule(GrammarFileName, "programa"); }
		return;

	}
	// $ANTLR end "programa"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_inicio() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_inicio() {}

	// $ANTLR start "inicio"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:9:1: inicio : SIMBOLO 'START' NUM ( NL )+ ;
	[GrammarRule("inicio")]
	private void inicio()
	{
		EnterRule_inicio();
		EnterRule("inicio", 2);
		TraceIn("inicio", 2);
		try { DebugEnterRule(GrammarFileName, "inicio");
		DebugLocation(9, 32);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:9:8: ( SIMBOLO 'START' NUM ( NL )+ )
			DebugEnterAlt(1);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:9:10: SIMBOLO 'START' NUM ( NL )+
			{
			DebugLocation(9, 10);
			Match(input,SIMBOLO,Follow._SIMBOLO_in_inicio52); 
			DebugLocation(9, 18);
			Match(input,32,Follow._32_in_inicio54); 
			DebugLocation(9, 26);
			Match(input,NUM,Follow._NUM_in_inicio56); 
			DebugLocation(9, 30);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:9:30: ( NL )+
			int cnt1=0;
			try { DebugEnterSubRule(1);
			while (true)
			{
				int alt1=2;
				try { DebugEnterDecision(1, decisionCanBacktrack[1]);
				int LA1_0 = input.LA(1);

				if ((LA1_0==NL))
				{
					alt1 = 1;
				}


				} finally { DebugExitDecision(1); }
				switch (alt1)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:9:30: NL
					{
					DebugLocation(9, 30);
					Match(input,NL,Follow._NL_in_inicio58); 

					}
					break;

				default:
					if (cnt1 >= 1)
						goto loop1;

					EarlyExitException eee1 = new EarlyExitException( 1, input );
					DebugRecognitionException(eee1);
					throw eee1;
				}
				cnt1++;
			}
			loop1:
				;

			} finally { DebugExitSubRule(1); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("inicio", 2);
			LeaveRule("inicio", 2);
			LeaveRule_inicio();
	    }
	 	DebugLocation(9, 32);
		} finally { DebugExitRule(GrammarFileName, "inicio"); }
		return;

	}
	// $ANTLR end "inicio"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_proposicion() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_proposicion() {}

	// $ANTLR start "proposicion"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:11:1: proposicion : ( ( instruccion | directiva )+ ( NL )+ | ( NL )+ );
	[GrammarRule("proposicion")]
	private void proposicion()
	{
		EnterRule_proposicion();
		EnterRule("proposicion", 3);
		TraceIn("proposicion", 3);
		try { DebugEnterRule(GrammarFileName, "proposicion");
		DebugLocation(11, 1);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:2: ( ( instruccion | directiva )+ ( NL )+ | ( NL )+ )
			int alt5=2;
			try { DebugEnterDecision(5, decisionCanBacktrack[5]);
			int LA5_0 = input.LA(1);

			if ((LA5_0==SIMBOLO))
			{
				alt5 = 1;
			}
			else if ((LA5_0==NL))
			{
				alt5 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 5, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:5: ( instruccion | directiva )+ ( NL )+
				{
				DebugLocation(12, 5);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:5: ( instruccion | directiva )+
				int cnt2=0;
				try { DebugEnterSubRule(2);
				while (true)
				{
					int alt2=3;
					try { DebugEnterDecision(2, decisionCanBacktrack[2]);
					int LA2_0 = input.LA(1);

					if ((LA2_0==SIMBOLO))
					{
						int LA2_2 = input.LA(2);

						if ((LA2_2==FINL||(LA2_2>=9 && LA2_2<=10)||(LA2_2>=13 && LA2_2<=14)||(LA2_2>=16 && LA2_2<=27)||(LA2_2>=30 && LA2_2<=31)||(LA2_2>=33 && LA2_2<=40)))
						{
							alt2 = 1;
						}
						else if ((LA2_2==11||(LA2_2>=28 && LA2_2<=29)||LA2_2==41))
						{
							alt2 = 2;
						}


					}


					} finally { DebugExitDecision(2); }
					switch (alt2)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:6: instruccion
						{
						DebugLocation(12, 6);
						PushFollow(Follow._instruccion_in_proposicion70);
						instruccion();
						PopFollow();


						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:20: directiva
						{
						DebugLocation(12, 20);
						PushFollow(Follow._directiva_in_proposicion74);
						directiva();
						PopFollow();


						}
						break;

					default:
						if (cnt2 >= 1)
							goto loop2;

						EarlyExitException eee2 = new EarlyExitException( 2, input );
						DebugRecognitionException(eee2);
						throw eee2;
					}
					cnt2++;
				}
				loop2:
					;

				} finally { DebugExitSubRule(2); }

				DebugLocation(12, 33);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:33: ( NL )+
				int cnt3=0;
				try { DebugEnterSubRule(3);
				while (true)
				{
					int alt3=2;
					try { DebugEnterDecision(3, decisionCanBacktrack[3]);
					int LA3_0 = input.LA(1);

					if ((LA3_0==NL))
					{
						alt3 = 1;
					}


					} finally { DebugExitDecision(3); }
					switch (alt3)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:33: NL
						{
						DebugLocation(12, 33);
						Match(input,NL,Follow._NL_in_proposicion79); 

						}
						break;

					default:
						if (cnt3 >= 1)
							goto loop3;

						EarlyExitException eee3 = new EarlyExitException( 3, input );
						DebugRecognitionException(eee3);
						throw eee3;
					}
					cnt3++;
				}
				loop3:
					;

				} finally { DebugExitSubRule(3); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:39: ( NL )+
				{
				DebugLocation(12, 39);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:39: ( NL )+
				int cnt4=0;
				try { DebugEnterSubRule(4);
				while (true)
				{
					int alt4=2;
					try { DebugEnterDecision(4, decisionCanBacktrack[4]);
					int LA4_0 = input.LA(1);

					if ((LA4_0==NL))
					{
						alt4 = 1;
					}


					} finally { DebugExitDecision(4); }
					switch (alt4)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:12:39: NL
						{
						DebugLocation(12, 39);
						Match(input,NL,Follow._NL_in_proposicion84); 

						}
						break;

					default:
						if (cnt4 >= 1)
							goto loop4;

						EarlyExitException eee4 = new EarlyExitException( 4, input );
						DebugRecognitionException(eee4);
						throw eee4;
					}
					cnt4++;
				}
				loop4:
					;

				} finally { DebugExitSubRule(4); }


				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("proposicion", 3);
			LeaveRule("proposicion", 3);
			LeaveRule_proposicion();
	    }
	 	DebugLocation(13, 1);
		} finally { DebugExitRule(GrammarFileName, "proposicion"); }
		return;

	}
	// $ANTLR end "proposicion"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_instruccion() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_instruccion() {}

	// $ANTLR start "instruccion"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:15:1: instruccion : etiqueta operacion ( etiqueta | NUM ) ;
	[GrammarRule("instruccion")]
	private void instruccion()
	{
		EnterRule_instruccion();
		EnterRule("instruccion", 4);
		TraceIn("instruccion", 4);
		try { DebugEnterRule(GrammarFileName, "instruccion");
		DebugLocation(15, 1);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:16:2: ( etiqueta operacion ( etiqueta | NUM ) )
			DebugEnterAlt(1);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:16:4: etiqueta operacion ( etiqueta | NUM )
			{
			DebugLocation(16, 4);
			PushFollow(Follow._etiqueta_in_instruccion98);
			etiqueta();
			PopFollow();

			DebugLocation(16, 13);
			PushFollow(Follow._operacion_in_instruccion100);
			operacion();
			PopFollow();

			DebugLocation(16, 23);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:16:23: ( etiqueta | NUM )
			int alt6=2;
			try { DebugEnterSubRule(6);
			try { DebugEnterDecision(6, decisionCanBacktrack[6]);
			int LA6_0 = input.LA(1);

			if ((LA6_0==SIMBOLO))
			{
				alt6 = 1;
			}
			else if ((LA6_0==NUM))
			{
				alt6 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 6, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(6); }
			switch (alt6)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:16:24: etiqueta
				{
				DebugLocation(16, 24);
				PushFollow(Follow._etiqueta_in_instruccion103);
				etiqueta();
				PopFollow();


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:16:35: NUM
				{
				DebugLocation(16, 35);
				Match(input,NUM,Follow._NUM_in_instruccion107); 

				}
				break;

			}
			} finally { DebugExitSubRule(6); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("instruccion", 4);
			LeaveRule("instruccion", 4);
			LeaveRule_instruccion();
	    }
	 	DebugLocation(17, 1);
		} finally { DebugExitRule(GrammarFileName, "instruccion"); }
		return;

	}
	// $ANTLR end "instruccion"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_directiva() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_directiva() {}

	// $ANTLR start "directiva"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:19:1: directiva : etiqueta tipoDirectiva opDirectiva ;
	[GrammarRule("directiva")]
	private void directiva()
	{
		EnterRule_directiva();
		EnterRule("directiva", 5);
		TraceIn("directiva", 5);
		try { DebugEnterRule(GrammarFileName, "directiva");
		DebugLocation(19, 1);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:20:2: ( etiqueta tipoDirectiva opDirectiva )
			DebugEnterAlt(1);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:20:4: etiqueta tipoDirectiva opDirectiva
			{
			DebugLocation(20, 4);
			PushFollow(Follow._etiqueta_in_directiva120);
			etiqueta();
			PopFollow();

			DebugLocation(20, 13);
			PushFollow(Follow._tipoDirectiva_in_directiva122);
			tipoDirectiva();
			PopFollow();

			DebugLocation(20, 27);
			PushFollow(Follow._opDirectiva_in_directiva124);
			opDirectiva();
			PopFollow();


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("directiva", 5);
			LeaveRule("directiva", 5);
			LeaveRule_directiva();
	    }
	 	DebugLocation(21, 1);
		} finally { DebugExitRule(GrammarFileName, "directiva"); }
		return;

	}
	// $ANTLR end "directiva"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_etiqueta() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_etiqueta() {}

	// $ANTLR start "etiqueta"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:23:1: etiqueta : SIMBOLO ;
	[GrammarRule("etiqueta")]
	private void etiqueta()
	{
		EnterRule_etiqueta();
		EnterRule("etiqueta", 6);
		TraceIn("etiqueta", 6);
		try { DebugEnterRule(GrammarFileName, "etiqueta");
		DebugLocation(23, 17);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:23:9: ( SIMBOLO )
			DebugEnterAlt(1);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:23:11: SIMBOLO
			{
			DebugLocation(23, 11);
			Match(input,SIMBOLO,Follow._SIMBOLO_in_etiqueta134); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("etiqueta", 6);
			LeaveRule("etiqueta", 6);
			LeaveRule_etiqueta();
	    }
	 	DebugLocation(23, 17);
		} finally { DebugExitRule(GrammarFileName, "etiqueta"); }
		return;

	}
	// $ANTLR end "etiqueta"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_operacion() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_operacion() {}

	// $ANTLR start "operacion"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:25:1: operacion : ( 'ADD' | 'AND' | 'COMP' | 'DIV' | 'J' | 'JEQ' | 'JGT' | 'JLT' | 'JSUB' | 'LDA' | 'LDCG' | 'LDL' | 'LDX' | 'MUL' | 'OR' | 'RD' | 'RSUB' | 'STA' | 'STCH' | 'STL' | 'STSW' | 'STX' | 'SUB' | 'TD' | 'TIX' | 'WD' | FINL );
	[GrammarRule("operacion")]
	private void operacion()
	{
		EnterRule_operacion();
		EnterRule("operacion", 7);
		TraceIn("operacion", 7);
		try { DebugEnterRule(GrammarFileName, "operacion");
		DebugLocation(25, 1);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:26:2: ( 'ADD' | 'AND' | 'COMP' | 'DIV' | 'J' | 'JEQ' | 'JGT' | 'JLT' | 'JSUB' | 'LDA' | 'LDCG' | 'LDL' | 'LDX' | 'MUL' | 'OR' | 'RD' | 'RSUB' | 'STA' | 'STCH' | 'STL' | 'STSW' | 'STX' | 'SUB' | 'TD' | 'TIX' | 'WD' | FINL )
			DebugEnterAlt(1);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:
			{
			DebugLocation(26, 2);
			if (input.LA(1)==FINL||(input.LA(1)>=9 && input.LA(1)<=10)||(input.LA(1)>=13 && input.LA(1)<=14)||(input.LA(1)>=16 && input.LA(1)<=27)||(input.LA(1)>=30 && input.LA(1)<=31)||(input.LA(1)>=33 && input.LA(1)<=40))
			{
				input.Consume();
				state.errorRecovery=false;
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("operacion", 7);
			LeaveRule("operacion", 7);
			LeaveRule_operacion();
	    }
	 	DebugLocation(27, 1);
		} finally { DebugExitRule(GrammarFileName, "operacion"); }
		return;

	}
	// $ANTLR end "operacion"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_tipoDirectiva() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_tipoDirectiva() {}

	// $ANTLR start "tipoDirectiva"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:29:1: tipoDirectiva : ( 'BYTE' | 'WORD' | 'RESB' | 'RESW' );
	[GrammarRule("tipoDirectiva")]
	private void tipoDirectiva()
	{
		EnterRule_tipoDirectiva();
		EnterRule("tipoDirectiva", 8);
		TraceIn("tipoDirectiva", 8);
		try { DebugEnterRule(GrammarFileName, "tipoDirectiva");
		DebugLocation(29, 1);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:30:2: ( 'BYTE' | 'WORD' | 'RESB' | 'RESW' )
			DebugEnterAlt(1);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:
			{
			DebugLocation(30, 2);
			if (input.LA(1)==11||(input.LA(1)>=28 && input.LA(1)<=29)||input.LA(1)==41)
			{
				input.Consume();
				state.errorRecovery=false;
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("tipoDirectiva", 8);
			LeaveRule("tipoDirectiva", 8);
			LeaveRule_tipoDirectiva();
	    }
	 	DebugLocation(31, 1);
		} finally { DebugExitRule(GrammarFileName, "tipoDirectiva"); }
		return;

	}
	// $ANTLR end "tipoDirectiva"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_opDirectiva() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_opDirectiva() {}

	// $ANTLR start "opDirectiva"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:33:1: opDirectiva : ( NUM | 'C' SIMBOLO | 'X' NUM );
	[GrammarRule("opDirectiva")]
	private void opDirectiva()
	{
		EnterRule_opDirectiva();
		EnterRule("opDirectiva", 9);
		TraceIn("opDirectiva", 9);
		try { DebugEnterRule(GrammarFileName, "opDirectiva");
		DebugLocation(33, 1);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:34:2: ( NUM | 'C' SIMBOLO | 'X' NUM )
			int alt7=3;
			try { DebugEnterDecision(7, decisionCanBacktrack[7]);
			switch (input.LA(1))
			{
			case NUM:
				{
				alt7 = 1;
				}
				break;
			case 12:
				{
				alt7 = 2;
				}
				break;
			case 42:
				{
				alt7 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 7, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(7); }
			switch (alt7)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:34:5: NUM
				{
				DebugLocation(34, 5);
				Match(input,NUM,Follow._NUM_in_opDirectiva286); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:34:11: 'C' SIMBOLO
				{
				DebugLocation(34, 11);
				Match(input,12,Follow._12_in_opDirectiva290); 
				DebugLocation(34, 14);
				Match(input,SIMBOLO,Follow._SIMBOLO_in_opDirectiva291); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:34:24: 'X' NUM
				{
				DebugLocation(34, 24);
				Match(input,42,Follow._42_in_opDirectiva295); 
				DebugLocation(34, 27);
				Match(input,NUM,Follow._NUM_in_opDirectiva296); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("opDirectiva", 9);
			LeaveRule("opDirectiva", 9);
			LeaveRule_opDirectiva();
	    }
	 	DebugLocation(35, 1);
		} finally { DebugExitRule(GrammarFileName, "opDirectiva"); }
		return;

	}
	// $ANTLR end "opDirectiva"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_fin() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_fin() {}

	// $ANTLR start "fin"
	// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:37:1: fin : 'END' etiqueta ;
	[GrammarRule("fin")]
	private void fin()
	{
		EnterRule_fin();
		EnterRule("fin", 10);
		TraceIn("fin", 10);
		try { DebugEnterRule(GrammarFileName, "fin");
		DebugLocation(37, 1);
		try
		{
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:37:5: ( 'END' etiqueta )
			DebugEnterAlt(1);
			// C:\\Users\\dany_\\Desktop\\SIC_gramatica.g:37:7: 'END' etiqueta
			{
			DebugLocation(37, 7);
			Match(input,15,Follow._15_in_fin307); 
			DebugLocation(37, 13);
			PushFollow(Follow._etiqueta_in_fin309);
			etiqueta();
			PopFollow();


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("fin", 10);
			LeaveRule("fin", 10);
			LeaveRule_fin();
	    }
	 	DebugLocation(38, 1);
		} finally { DebugExitRule(GrammarFileName, "fin"); }
		return;

	}
	// $ANTLR end "fin"
	#endregion Rules


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _inicio_in_programa38 = new BitSet(new ulong[]{0x140UL});
		public static readonly BitSet _proposicion_in_programa40 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _fin_in_programa42 = new BitSet(new ulong[]{0x20UL});
		public static readonly BitSet _FINLINEA_in_programa44 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SIMBOLO_in_inicio52 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _32_in_inicio54 = new BitSet(new ulong[]{0x80UL});
		public static readonly BitSet _NUM_in_inicio56 = new BitSet(new ulong[]{0x40UL});
		public static readonly BitSet _NL_in_inicio58 = new BitSet(new ulong[]{0x42UL});
		public static readonly BitSet _instruccion_in_proposicion70 = new BitSet(new ulong[]{0x140UL});
		public static readonly BitSet _directiva_in_proposicion74 = new BitSet(new ulong[]{0x140UL});
		public static readonly BitSet _NL_in_proposicion79 = new BitSet(new ulong[]{0x42UL});
		public static readonly BitSet _NL_in_proposicion84 = new BitSet(new ulong[]{0x42UL});
		public static readonly BitSet _etiqueta_in_instruccion98 = new BitSet(new ulong[]{0x1FECFFF6610UL});
		public static readonly BitSet _operacion_in_instruccion100 = new BitSet(new ulong[]{0x180UL});
		public static readonly BitSet _etiqueta_in_instruccion103 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NUM_in_instruccion107 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _etiqueta_in_directiva120 = new BitSet(new ulong[]{0x20030000800UL});
		public static readonly BitSet _tipoDirectiva_in_directiva122 = new BitSet(new ulong[]{0x40000001080UL});
		public static readonly BitSet _opDirectiva_in_directiva124 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SIMBOLO_in_etiqueta134 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NUM_in_opDirectiva286 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _12_in_opDirectiva290 = new BitSet(new ulong[]{0x100UL});
		public static readonly BitSet _SIMBOLO_in_opDirectiva291 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _42_in_opDirectiva295 = new BitSet(new ulong[]{0x80UL});
		public static readonly BitSet _NUM_in_opDirectiva296 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _15_in_fin307 = new BitSet(new ulong[]{0x100UL});
		public static readonly BitSet _etiqueta_in_fin309 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}
